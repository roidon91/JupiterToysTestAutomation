name: .NET Playwright Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [Chromium, Firefox, WebKit]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Set Browser Environment Variable
      run: echo "DRIVER_TYPE=${{ matrix.browser }}" >> $GITHUB_ENV

    - name: Restore dependencies
      run: dotnet restore JupiterToysTestAutomation/JupiterToysAppTest.sln
      working-directory: src

    - name: Build
      run: dotnet build JupiterToysTestAutomation/JupiterToysAppTest.sln --no-restore
      working-directory: src

    - name: Install PowerShell DevOps Module
      uses: powershell-devops/powershell-devops@v0.2.0

    - name: Ensure Browsers Are Installed
      run: pwsh JupiterToysTestAutomation/JupiterToysAppTest/bin/Debug/net8.0/playwright.ps1 install --with-deps
      working-directory: src

    # ✅ Create Directories for Test Results and Screenshots
    - name: Create Test Results and Screenshots Directory
      run: mkdir -p src/TestResults/${{ matrix.browser }}/Screenshots

    - name: Run Tests on ${{ matrix.browser }}
      run: |
        dotnet test JupiterToysTestAutomation/JupiterToysAppTest.sln --no-build --verbosity normal \
          --logger "trx;LogFileName=TestResults/${{ matrix.browser }}/TestResults.trx" | tee TestResults/${{ matrix.browser }}/TestResults.log
      working-directory: src

    - name: Verify Test Report Files
      run: |
        echo "Checking if test results exist..."
        ls -l TestResults/${{ matrix.browser }}/
        test -f TestResults/${{ matrix.browser }}/TestResults.trx && echo "✅ TRX Report Found" || echo "❌ TRX Report NOT Found"
        test -f TestResults/${{ matrix.browser }}/TestResults.log && echo "✅ Log File Found" || echo "❌ Log File NOT Found"
      working-directory: src

    # ✅ Upload Test Logs
    - name: Upload Test Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Test-Logs-${{ matrix.browser }}
        path: src/TestResults/${{ matrix.browser }}/TestResults.log
      continue-on-error: true

    # ✅ Upload TRX Test Report
    - name: Upload TRX Test Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: TRX-Test-Report-${{ matrix.browser }}
        path: src/TestResults/${{ matrix.browser }}/TestResults.trx
      continue-on-error: true

    # ✅ Upload Screenshots as Artifacts
    - name: Upload Screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Playwright-Screenshots-${{ matrix.browser }}
        path: src/TestResults/${{ matrix.browser }}/Screenshots/
      continue-on-error: true

    - name: Generate Summary Report
      run: |
        echo "## Test Report Summary 🚀" > summary-${{ matrix.browser }}.md
        echo "" >> summary-${{ matrix.browser }}.md
        echo "### 📜 Test Results for ${{ matrix.browser }}" >> summary-${{ matrix.browser }}.md
        echo "\`\`\`" >> summary-${{ matrix.browser }}.md
        tail -n 20 TestResults/${{ matrix.browser }}/TestResults.log >> summary-${{ matrix.browser }}.md
        echo "\`\`\`" >> summary-${{ matrix.browser }}.md
      working-directory: src

    - name: Add Summary to GitHub Actions
      if: always()
      run: |
        if [ -f src/summary-${{ matrix.browser }}.md ]; then
          cat src/summary-${{ matrix.browser }}.md >> $GITHUB_STEP_SUMMARY
        else
          echo "No summary file found for ${{ matrix.browser }}" >> $GITHUB_STEP_SUMMARY
        fi
